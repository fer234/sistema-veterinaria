{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/components/dashboard/dashboard.component.ts","./src/app/components/dashboard/dashboard.component.html","./src/app/components/forgot-password/forgot-password.component.ts","./src/app/components/forgot-password/forgot-password.component.html","./src/app/components/pacientes/paciente-list/paciente-list.component.ts","./src/app/components/pacientes/paciente-list/paciente-list.component.html","./src/app/components/pacientes/paciente-tabla/paciente-tabla.component.ts","./src/app/components/pacientes/paciente-tabla/paciente-tabla.component.html","./src/app/components/pacientes/paciente/paciente.component.ts","./src/app/components/pacientes/paciente/paciente.component.html","./src/app/components/pacientes/pacientes.component.ts","./src/app/components/pacientes/pacientes.component.html","./src/app/components/sign-in/sign-in.component.ts","./src/app/components/sign-in/sign-in.component.html","./src/app/components/sign-up/sign-up.component.ts","./src/app/components/sign-up/sign-up.component.html","./src/app/components/verify-email/verify-email.component.ts","./src/app/components/verify-email/verify-email.component.html","./src/app/guard/auth.guard.ts","./src/app/models/paciente.ts","./src/app/services/auth.service.ts","./src/app/services/paciente.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Importar todos los componentes para los que se debe activar el servicio de navegación\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\nimport { AuthGuard } from \"./guard/auth.guard\";\nimport {PacientesComponent} from './components/pacientes/pacientes.component';\nimport { PacienteListComponent } from './components/pacientes/paciente-list/paciente-list.component';\nimport { PacienteTablaComponent } from './components/pacientes/paciente-tabla/paciente-tabla.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\n  { path: 'sign-in', component: SignInComponent },\n  { path: 'register-user', component: SignUpComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'pacientes', component: PacientesComponent, canActivate: [AuthGuard] },\n  { path: 'paciente-list', component: PacienteListComponent, canActivate: [AuthGuard] },\n  { path: 'paciente-tabla', component: PacienteTablaComponent, canActivate: [AuthGuard] },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'verify-email-address', component: VerifyEmailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sistema-veterinaria';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\nimport { PacientesComponent } from './components/pacientes/pacientes.component';\nimport { PacienteListComponent } from './components/pacientes/paciente-list/paciente-list.component';\nimport { PacienteComponent } from './components/pacientes/paciente/paciente.component';\n\n//Service\nimport { AuthService } from \"./services/auth.service\";\nimport { AuthGuard } from \"./guard/auth.guard\";\nimport { PacienteService } from './services/paciente.service';\n\n// Toastr, para notificaciones en angular\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { PacienteTablaComponent } from './components/pacientes/paciente-tabla/paciente-tabla.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    SignInComponent,\n    SignUpComponent,\n    ForgotPasswordComponent,\n    VerifyEmailComponent,\n    PacientesComponent,\n    PacienteListComponent,\n    PacienteComponent,\n    PacienteTablaComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    ToastrModule.forRoot(),\n    AngularFirestoreModule\n  ],\n  providers: [AuthGuard, PacienteService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- menu navbar con un icono de bootstrap --> \n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/250px-Angular_full_color_logo.svg.png\" width=\"50md\" height=\"50md\" alt=\"logo\">\n<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n<span class=\"navbar-toggler-icon\"></span>\n</button>\n<div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n<div class=\"navbar-nav\">\n<a class=\"nav-item nav-link active\" routerLink=\"/dashboard\">Perfil<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/pacientes\">Pacientes<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/paciente-tabla\">Ticket<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" (click)=\"authService.SignOut()\">Salir<span class=\"sr-only\">(current)</span></a>\n</div>\n</div>\n</nav>\n\n<br>\n<div class=\"container\">\n<br>\n<div class=\"row\" *ngIf=\"authService.userData as user\">\n<div class=\" col-lg-offset-3 col-lg-6\">\n<div class=\"panel panel-default\">\n<div class=\"panel-body\">\n<div class=\"row\">\n<div class=\"col-lg-12\">\n<div class=\"row\">\n<div class=\"col-sm-offset-3 col-sm-6 col-md-offset-3 col-md-6 col-lg-offset-3 col-lg-6\">\n<img class=\"img-circle img-responsive\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\">\n</div>\n</div>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-lg-12\">\n<div class=\"row\">\n<div class=\"centered-text col-sm-offset-3 col-sm-6 col-md-offset-3 col-md-6 col-lg-offset-3 col-lg-6\">\n<div itemscope=\"\" itemtype=\"http://schema.org/Person\">\n<h2> <span itemprop=\"name\">{{(user.displayName) ? user.displayName : 'User'}}</span></h2>\n<p itemprop=\"jobTitle\">Identificador: {{user.uid}}</p>\n<p><span itemprop=\"affiliation\">Email: {{user.email}}</span></p>\n<p>\n<i class=\"fa fa-map-marker\"></i> <span itemprop=\"addressRegion\">Verificado: {{user.emailVerified}}</span>\n</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<br>\n<br>\n\n<!-- Footer -->\n<footer class=\"page-footer font-small black\">\n<!-- Copyright -->\n<div class=\"footer-copyright text-center py-3\">Fernando Reyes © 2020 Copyright: Derechos reservados\n</div>\n<!-- Copyright -->\n</footer>\n<!-- Footer -->","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-5\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h1 class=\"text-center\">RECUPERAR CLAVE</h1>\n          <form>\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" #passwordResetEmail required>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-2\">\n      <div class=\"card\">\n        <div class=\"card-body d-flex justify-content-around\">\n          <input type=\"button\" class=\"btn btn-primary\" value=\"Recuperar clave\" (click)=\"authService.ForgotPassword(passwordResetEmail.value)\">\n          <input type=\"button\" class=\"btn btn-success\" value=\"Regresar al Login\" routerLink=\"/sign-in\">\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport {Paciente} from '../../../models/paciente';\n\n\n// service\nimport { PacienteService } from '../../../services/paciente.service';\n\n// toastr\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-paciente-list',\n  templateUrl: './paciente-list.component.html',\n  styleUrls: ['./paciente-list.component.css']\n})\nexport class PacienteListComponent implements OnInit {\n\n  // Arreglo para almacenar la informacion que se obtenga de la base de datos de firebase\n  pacienteList: Paciente[];\n\n  constructor(\n    private pacienteService: PacienteService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    return this.pacienteService.getPacientes()\n      .snapshotChanges().subscribe(item => {\n        this.pacienteList = [];\n        item.forEach(element => {\n          let x = element.payload.toJSON();\n          x[\"$key\"] = element.key;\n          this.pacienteList.push(x as Paciente);\n        });\n      });\n  }\n /* \n   Recibe una varible de tipo 'Product' para invocar el servicio de firebase, para actualizarlo\n   Para no ocupar el doble enlace de datos ' [(ngModel)]' , se va utilizar 'Object.assign({}, product)'  \n  */\n onEdit(paciente: Paciente) {\n  this.pacienteService.selectedPaciente = Object.assign({}, paciente);\n}\n\n/* \n Recibe la llave '$key' para eliminar el registro, invocando el metodo 'deleteProduct' del servicio de firebase\n ademas muestra un 'warning' con toastr\n*/\nonDelete($key: string) {\n  if (confirm('Are you sure you want to delete it?')) {\n    this.pacienteService.deletePaciente($key);\n    this.toastr.warning('Deleted Successfully', 'Paciente Removed');\n  }\n}\n\n}\n","<div class=\"card\">\n<div class=\"card-body\">\n<h3 class=\"text-center\">\nListado de Pacientes\n</h3>\n<br>\n<table id=\"tabla\"class=\"table table-bordered table-responsive\">\n<thead class=\"thead-dark\">\n<tr>\n<th scope=\"col\">Identificador</th>\n<th scope=\"col\">Nombre</th>\n<th scope=\"col\">Numero de DUI</th>\n<th scope=\"col\">Mascota</th>\n<th scope=\"col\">Tratamiento</th>\n<th scope=\"col\">Medicamento</th>\n<th scope=\"col\">Visita</th>\n<th scope=\"col\">Costo</th>\n<th scope=\"col\">Operacion</th>\n</tr>\n</thead>\n<tbody>\n<tr *ngFor=\"let paciente of pacienteList\">\n<td>{{paciente.$key}}</td>\n<td>{{paciente.name}}</td>            \n<td>{{paciente.dui}}</td>\n<td>{{paciente.mascota}}</td>\n<td>{{paciente.tratamiento}}</td>\n<td>{{paciente.medicamento}}</td>\n<td>{{paciente.visita}}</td>\n<td>{{paciente.costo}}</td>\n<td>\n<button type=\"button\" class=\"btn btn-success\" (click)=\"onEdit(paciente)\">Editar</button>\n<br>\n<br>\n<button type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(paciente.$key)\">Borrar</button>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\n//Service\nimport { PacienteService } from '../../../services/paciente.service';\nimport {Paciente} from '../../../models/paciente';\n\n@Component({\n  selector: 'app-paciente-tabla',\n  templateUrl: './paciente-tabla.component.html',\n  styleUrls: ['./paciente-tabla.component.css']\n})\nexport class PacienteTablaComponent implements OnInit {\n\n  // Arreglo para almacenar la informacion que se obtenga de la base de datos de firebase\n  pacienteList: Paciente[];\n  filtro:string;\n\n  constructor(\n    private pacienteService: PacienteService) {this.downloadPDF();}\n     \n     public downloadPDF(): void {\n      var data = document.getElementById('htmlData');  //Id of the table\n      html2canvas(data).then(canvas => {  \n        // Few necessary setting options  \n        let imgWidth = 208;   \n        let pageHeight = 295;    \n        let imgHeight = canvas.height * imgWidth / canvas.width;  \n        let heightLeft = imgHeight;  \n  \n        const contentDataURL = canvas.toDataURL('image/png')  \n        let pdf = new jsPDF('p', 'mm', 'a4'); // A4 size page of PDF  \n        let position = 0;  \n        pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)  \n        pdf.save('Factura.pdf'); // Generated PDF   \n      }); \n    }\n\n    ngOnInit() {\n      return this.pacienteService.getPacientes()\n        .snapshotChanges().subscribe(item => {\n          this.pacienteList = [];\n          item.forEach(element => {\n            let x = element.payload.toJSON();\n            x[\"$key\"] = element.key;\n            this.pacienteList.push(x as Paciente);\n          });\n        });\n    }\n\n    buscar(){\n      this.pacienteList = this.pacienteList.filter(res=>{\n        return res.name.toLocaleLowerCase().match(this.filtro.toLocaleLowerCase());\n      })\n    }\n\n}\n","<!-- menu navbar con un icono de bootstrap --> \n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/250px-Angular_full_color_logo.svg.png\" width=\"50md\" height=\"50md\" alt=\"logo\">\n<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n<span class=\"navbar-toggler-icon\"></span>\n</button>\n<div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n<div class=\"navbar-nav\">\n<a class=\"nav-item nav-link active\" routerLink=\"/dashboard\">Perfil<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/pacientes\">Pacientes<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/paciente-tabla\">Ticket<span class=\"sr-only\">(current)</span></a>\n</div>\n</div>\n</nav>\n\n<br>\n<div class=\"container\">\n<h3 class=\"text-center\">Selecciona a un paciente para generar Ticket</h3>\n<div class=\"abs-center\">\n<!-- Search form -->\n<div class=\"active-pink-4 mb-4\">\n<input class=\"form-control\" type=\"text\" [(ngModel)]=\"filtro\" (input)=\"buscar()\" placeholder=\"Buscar por nombre\" aria-label=\"Search\">\n</div>\n</div>\n</div>\n\n<div class=\"container\">\n<div class=\"abs-center\">\n<div id=\"htmlData\">\n<table id=\"tabla\"class=\"table table-bordered table-responsive\">\n<thead class=\"thead-dark\">\n<tr>\n<th scope=\"col\">Identificador</th>\n<th scope=\"col\">Nombre</th>\n<th scope=\"col\">Numero de DUI</th>\n<th scope=\"col\">Mascota</th>\n<th scope=\"col\">Tratamiento</th>\n<th scope=\"col\">Medicamento</th>\n<th scope=\"col\">Visita</th>\n<th scope=\"col\">Costo</th>\n</tr>\n</thead>\n<tbody>\n<tr *ngFor=\"let paciente of pacienteList\">\n<td>{{paciente.$key}}</td>\n<td>{{paciente.name}}</td>            \n<td>{{paciente.dui}}</td>\n<td>{{paciente.mascota}}</td>\n<td>{{paciente.tratamiento}}</td>\n<td>{{paciente.medicamento}}</td>\n<td>{{paciente.visita}}</td>\n<td>{{paciente.costo}}</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n\n<div class=\"card\">\n<div class=\"card-body\">\n<div class=\"row d-flex justify-content-center\">\n<button class=\"btn col col-lg-4 btn-danger btn-block ml-4\" (click)=\"downloadPDF()\">Generar Ticket</button>\n</div>\n</div>\n</div>\n<br>\n<br>\n\n<!-- Footer -->\n<footer class=\"page-footer font-small black\">\n<!-- Copyright -->\n<div class=\"footer-copyright text-center py-3\">Fernando Reyes © 2020 Copyright: Derechos reservados\n</div>\n<!-- Copyright -->\n</footer>\n<!-- Footer -->\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n//  Service \nimport { PacienteService } from '../../../services/paciente.service';\n// Class\nimport { Paciente } from '../../../models/paciente';\n// toastr\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-paciente',\n  templateUrl: './paciente.component.html',\n  styleUrls: ['./paciente.component.css']\n})\nexport class PacienteComponent implements OnInit {\n\n  constructor(\n    public pacienteService: PacienteService,\n    public toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.pacienteService.getPacientes();\n    this.resetForm();\n  }\n\n  // Recibe un formulario del tipo NgForm, lo envia a guardar o actualizar , invocando el servicio Firebase\n  // lo termina limpiando resetForm\n  onSubmit(pacienteForm: NgForm) {\n    if (pacienteForm.value.$key == null)\n      this.pacienteService.insertPaciente(pacienteForm.value);\n    else\n      this.pacienteService.updatePaciente(pacienteForm.value);\n\n    this.resetForm(pacienteForm);\n    this.toastr.success('Sucessful Operation', 'Paciente Registered');\n  }\n\n  // Para limpiar el formulario\n  resetForm(pacienteForm?: NgForm) {\n    if (pacienteForm != null)\n      pacienteForm.reset();\n    this.pacienteService.selectedPaciente = new Paciente();\n  }\n\n}\n","<div class=\"card mt-5\">\n<div class=\"card-body\">\n<h3 class=\"text-center\">\nRegistro de Pacientes\n</h3>\n<br>\n<!-- Cuando el evento onSubmit , suceda se va pasar todo el formulario 'pacienteForm' -->\n<form id=\"formulario\" #pacienteForm=\"ngForm\" (ngSubmit)=\"onSubmit(pacienteForm)\">\n\n<!-- TO UPDATE -->\n<input type=\"hidden\" name=\"$key\" #$key=\"ngModel\" [(ngModel)]=\"pacienteService.selectedPaciente.$key\">\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Nombre</label>\n<input type=\"text\" class=\"form-control\" name=\"name\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.name\" placeholder=\"Agregar Nombre\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Numero de DUI</label>\n<input type=\"text\" class=\"form-control\" name=\"dui\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.dui\" placeholder=\"Agregar DUI\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Nombre de la mascota</label>\n<input type=\"text\" class=\"form-control\" name=\"mascota\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.mascota\" placeholder=\"Agregar Mascota\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Tratamiento aplicable</label>\n<input type=\"text\" class=\"form-control\" name=\"tratamiento\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.tratamiento\" placeholder=\"Agregar Tratamiento\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Medicamento recetado</label>\n<input type=\"text\" class=\"form-control\" name=\"medicamento\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.medicamento\" placeholder=\"Agregar Medicamento\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Numero de visita</label>\n<input type=\"text\" class=\"form-control\" name=\"visita\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.visita\" placeholder=\"Agregar Visita\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Costo total</label>\n<input type=\"text\" class=\"form-control\" name=\"costo\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.costo\" placeholder=\"Agregar Costo\">\n</div>\n\n<div class=\"form-group\">\n<button class=\"btn btn-primary\" type=\"submit\">Agregar</button>\n<br>\n<br>\n<button class=\"btn btn-warning\" type=\"reset\" (click)=\"resetForm(pacienteForm)\">Limpiar</button>\n</div>\n</form>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-pacientes',\n  templateUrl: './pacientes.component.html',\n  styleUrls: ['./pacientes.component.css']\n})\nexport class PacientesComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- menu navbar con un icono de bootstrap --> \n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/250px-Angular_full_color_logo.svg.png\" width=\"50md\" height=\"50md\" alt=\"logo\">\n<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n<span class=\"navbar-toggler-icon\"></span>\n</button>\n<div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n<div class=\"navbar-nav\">\n<a class=\"nav-item nav-link active\" routerLink=\"/dashboard\">Perfil<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/pacientes\">Pacientes<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/paciente-tabla\">Ticket<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" (click)=\"authService.SignOut()\">Salir<span class=\"sr-only\">(current)</span></a>\n</div>\n</div>\n</nav>\n\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-5\">\n<app-paciente></app-paciente>\n</div>\n<div class=\"col-md-7 text-center\">\n<br>\n<br>\n<app-paciente-list></app-paciente-list>\n</div>\n</div>\n</div>\n<br>\n<br>\n\n\n<!-- Footer -->\n<footer class=\"page-footer font-small black\">\n<!-- Copyright -->\n<div class=\"footer-copyright text-center py-3\">Fernando Reyes © 2020 Copyright: Derechos reservados\n</div>\n<!-- Copyright -->\n</footer>\n<!-- Footer -->\n","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-5\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h1 class=\"text-center\">Iniciar sesión</h1>\n          <form>\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"text\" class=\"form-control\" placeholder=\"Username\" #userName required>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\">Contraseña</label>\n              <input type=\"password\" class=\"form-control\" placeholder=\"Password\" #userPassword required>\n            </div>\n            <input type=\"button\" class=\"btn btn-dark btn-lg float-left\" value=\"Login\" (click)=\"authService.SignIn(userName.value, userPassword.value)\">\n            <br>\n            <input type=\"button\" class=\"btn btn-light btn-lg float-left\" value=\"Olvidaste tu clave?\" routerLink=\"/forgot-password\">\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  \n  \n  <div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-2\">\n      <div class=\"card\">\n        <div class=\"card-body d-flex justify-content-around\">\n          <button class=\"btn btn-lg btn-google\" (click)=\"authService.GoogleAuth()\" ><i class=\"fa fa-google-plus\" aria-hidden=\"true\"></i> Google</button>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n  \n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Sign Up</h3>\n  \n        <div class=\"formGroup\">\n          <input type=\"email\" class=\"formControl\" placeholder=\"Email Address\" #userEmail required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"password\" class=\"formControl\" placeholder=\"Password\" #userPwd required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"button\" class=\"btn btnPrimary\" value=\"Sign Up\" (click)=\"authService.SignUp(userEmail.value, userPwd.value)\">\n        </div>\n  \n        <div class=\"formGroup\">\n          <span class=\"or\"><span class=\"orInner\">Or</span></span>\n        </div>\n  \n        <!-- Continue with Google -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn googleBtn\" (click)=\"authService.GoogleAuth()\">\n            <i class=\"fab fa-google-plus-g\"></i>\n            Continue with Google\n          </button>\n        </div>\n  \n        <!-- Continue with Facebook -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn facebookBtn\" (click)=\"authService.FacebookAuth()\">\n            <i class=\"fab fa-facebook\"></i>\n            Continue with Facebook\n          </button>\n        </div>\n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Already have an account? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\n      </div>\n    </div>\n  \n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Thank You for Registering</h3>\n  \n        <div class=\"formGroup\" *ngIf=\"authService.userData as user\">\n          <p class=\"text-center\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\n          <p class=\"text-center\">Please check your email and click on the link to verfiy your email address.</p>\n        </div>\n        \n        <!-- Calling SendVerificationMail() method using authService Api -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn btnPrimary\" (click)=\"authService.SendVerificationMail()\">\n            <i class=\"fas fa-redo-alt\"></i>\n            Resend Verification Email\n          </button>\n        </div>\n  \n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Go back to?<span class=\"redirect\" routerLink=\"/sign-in\"> Sign in</span></span>\n      </div>\n  \n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ){ }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(this.authService.isLoggedIn !== true) {\n      this.router.navigate(['sign-in'])\n    }\n    return true;\n  }\n  \n}\n","export class Paciente {\n    $key : string;\n    name : string;\n    dui : string;\n    mascota : string;\n    tratamiento : string;\n    medicamento : string;\n    visita : string;\n    costo : string;\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { User } from \"../models/user\";\nimport { auth } from 'firebase/app';\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  userData: any; // Guardar datos de usuario registrados\n\n  constructor(\n    public afs: AngularFirestore,   //  Inyectar Servicio Firestore\n    public afAuth: AngularFireAuth, // Inyectar el servicio de autenticación de Firebase\n    public router: Router,  \n    public ngZone: NgZone // Servicio NgZone para eliminar la advertencia de alcance externo\n  ) {    \n\n    /* Guardar datos de usuario en almacenamiento local cuando\n    iniciado sesión y configurando nulo al cerrar sesión*/\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    })\n  }\n\n  // Iniciar sesión con correo electrónico / contraseña\n  SignIn(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password).then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n       // window.alert(\"Por favor revisar credenciales\")\n         window.alert(error.message)\n      })\n  }\n\n  // Regístrese con correo electrónico / contraseña\n  SignUp(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Llame a la función SendVerificaitonMail () cuando un nuevo usuario firme\n        y vuelve la funcion*/\n        this.SendVerificationMail();\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n  // Enviar verificación por correo electrónico cuando se registre un nuevo usuario\n  SendVerificationMail() {\n    return this.afAuth.currentUser.then(u => u.sendEmailVerification())\n    .then(() => {\n    this.router.navigate(['verify-email-address']);\n    })\n    }\n\n  // Restablecer contraseña olvidada\n  ForgotPassword(passwordResetEmail) {\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\n    .then(() => {\n      window.alert('Password reset email sent, check your inbox.');\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  // Devuelve verdadero cuando el usuario está conectado y \n  // el correo electrónico está verificado\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.emailVerified !== false) ? true : true;\n  }\n\n// Iniciar sesión usando Facebook\n  FacebookAuth() {\n    return this.AuthLogin(new auth.FacebookAuthProvider());\n  }\n\n  // Iniciar sesión usando Twitter\n  TwitterAuth() {\n    return this.AuthLogin(new auth.TwitterAuthProvider());\n  }\n\n  // Iniciar sesión usando Facebook Google\n  GoogleAuth() {\n    return this.AuthLogin(new auth.GoogleAuthProvider());\n  }\n\n  // Lógica de autenticación para ejecutar cualquier proveedor de autenticación  \n  AuthLogin(provider) {\n    return this.afAuth.signInWithPopup(provider)\n    .then((result) => {\n       this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        })\n      this.SetUserData(result.user);\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n\n  /* Configurar datos de usuario al iniciar sesión con nombre de usuario / contraseña,\n  registrarse con nombre de usuario / contraseña e iniciar sesión con autenticación social\n  proveedor en la base de datos de Firestore usando el servicio AngularFirestore + AngularFirestoreDocument*/\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified\n    }\n    return userRef.set(userData, {\n      merge: true\n    })\n  }\n\n  // desconectar\n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.setItem('user', null);\n      localStorage.removeItem('user');\n      this.router.navigate(['sign-in']);\n    })\n  }\n\n  FacebookLogin(){\n    var provider = new auth.FacebookAuthProvider();\n    auth().signInWithPopup(provider).then(function(result) {\n      var user = result.user;\n      console.log(user);\n      // ...\n    }).catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n    \n  }\n  \n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n// Firebase\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\n\n// Model\nimport { Paciente } from '../models/paciente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PacienteService {\n\n  // Traer los datos de firebase\n  pacienteList: AngularFireList<any>;\n\n  // Una variable temporal, para guardar los datos seleccionados, del tipo Paciente\n  selectedPaciente: Paciente = new Paciente();\n\n  constructor(private firebase: AngularFireDatabase) { }\n  // Traer todos los pacientes desde firebase \n  getPacientes() { // guarda los elementos en la varible 'pacientes'\n  return this.pacienteList = this.firebase.list('pacientes');\n}\n\n// crear un nuevo producto  , recibiendo un parametro de tipo Paciente\ninsertPaciente(paciente: Paciente) {\n  // agregar un dato al final de la lista, como recibe un objeto del tipo Paciente , puede acceder a sus propiedades\n  this.pacienteList.push({\n    name: paciente.name,\n    dui: paciente.dui,\n    mascota: paciente.mascota,\n    tratamiento: paciente.tratamiento,\n    medicamento: paciente.medicamento,\n    visita: paciente.visita,\n    costo: paciente.costo\n  });\n}\n\n// Actualiza un producto, recibiendo un parametro de tipo Paciente\nupdatePaciente(paciente: Paciente) {\n  // Utilizando el metodo update de firebase , se envia clave y los parametros que va actualizar \n  this.pacienteList.update(paciente.$key, {\n    name: paciente.name,\n    dui: paciente.dui,\n    mascota: paciente.mascota,\n    tratamiento: paciente.tratamiento,\n    medicamento: paciente.medicamento,\n    visita: paciente.visita,\n    costo: paciente.costo\n  });\n}\n\n// Elimina un producto, recibiendo como parametro la clave , utilizando el metodo remove de firebase\ndeletePaciente($key: string) {\n  this.pacienteList.remove($key);\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n  apiKey: \"AIzaSyDRzLj0wxkVDR3a4RsAzcHdsS4-dLYoX2o\",\n  authDomain: \"sistema-veterinaria.firebaseapp.com\",\n  databaseURL: \"https://sistema-veterinaria.firebaseio.com\",\n  projectId: \"sistema-veterinaria\",\n  storageBucket: \"sistema-veterinaria.appspot.com\",\n  messagingSenderId: \"109153873378\",\n  appId: \"1:109153873378:web:2d5a3b333756b24423ddbb\",\n  measurementId: \"G-5128KXDR69\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}