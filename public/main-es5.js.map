{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/dashboard/dashboard.component.ts","webpack:///src/app/components/dashboard/dashboard.component.html","webpack:///src/app/components/forgot-password/forgot-password.component.ts","webpack:///src/app/components/forgot-password/forgot-password.component.html","webpack:///src/app/components/pacientes/paciente-list/paciente-list.component.ts","webpack:///src/app/components/pacientes/paciente-list/paciente-list.component.html","webpack:///src/app/components/pacientes/paciente-tabla/paciente-tabla.component.ts","webpack:///src/app/components/pacientes/paciente-tabla/paciente-tabla.component.html","webpack:///src/app/components/pacientes/paciente/paciente.component.ts","webpack:///src/app/components/pacientes/paciente/paciente.component.html","webpack:///src/app/components/pacientes/pacientes.component.ts","webpack:///src/app/components/pacientes/pacientes.component.html","webpack:///src/app/components/sign-in/sign-in.component.ts","webpack:///src/app/components/sign-in/sign-in.component.html","webpack:///src/app/components/sign-up/sign-up.component.ts","webpack:///src/app/components/sign-up/sign-up.component.html","webpack:///src/app/components/verify-email/verify-email.component.ts","webpack:///src/app/components/verify-email/verify-email.component.html","webpack:///src/app/guard/auth.guard.ts","webpack:///src/app/models/paciente.ts","webpack:///src/app/services/auth.service.ts","webpack:///src/app/services/paciente.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","component","canActivate","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","initializeApp","firebase","declarations","providers","bootstrap","DashboardComponent","authService","ForgotPasswordComponent","PacienteListComponent","pacienteService","toastr","getPacientes","snapshotChanges","subscribe","item","pacienteList","forEach","element","x","payload","toJSON","key","push","paciente","selectedPaciente","Object","assign","$key","confirm","deletePaciente","warning","PacienteTablaComponent","downloadPDF","data","document","getElementById","canvas","imgWidth","pageHeight","imgHeight","height","width","heightLeft","contentDataURL","toDataURL","pdf","position","addImage","save","filter","res","name","toLocaleLowerCase","match","filtro","buscar","PacienteComponent","resetForm","pacienteForm","value","insertPaciente","updatePaciente","success","reset","onSubmit","PacientesComponent","SignInComponent","SignUpComponent","VerifyEmailComponent","AuthGuard","router","next","state","isLoggedIn","navigate","providedIn","Paciente","AuthService","afs","afAuth","ngZone","authState","user","userData","localStorage","setItem","JSON","stringify","parse","getItem","email","password","signInWithEmailAndPassword","result","run","SetUserData","error","window","alert","message","createUserWithEmailAndPassword","SendVerificationMail","currentUser","u","sendEmailVerification","passwordResetEmail","sendPasswordResetEmail","AuthLogin","FacebookAuthProvider","TwitterAuthProvider","GoogleAuthProvider","provider","signInWithPopup","userRef","doc","uid","displayName","photoURL","emailVerified","set","merge","signOut","removeItem","console","log","errorCode","errorMessage","credential","PacienteService","list","dui","mascota","tratamiento","medicamento","visita","costo","update","remove","environment","production","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// Importar todos los componentes para los que se debe activar el servicio de navegación\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\nimport { AuthGuard } from \"./guard/auth.guard\";\nimport {PacientesComponent} from './components/pacientes/pacientes.component';\nimport { PacienteListComponent } from './components/pacientes/paciente-list/paciente-list.component';\nimport { PacienteTablaComponent } from './components/pacientes/paciente-tabla/paciente-tabla.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/sign-in', pathMatch: 'full' },\n  { path: 'sign-in', component: SignInComponent },\n  { path: 'register-user', component: SignUpComponent },\n  { path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard] },\n  { path: 'pacientes', component: PacientesComponent, canActivate: [AuthGuard] },\n  { path: 'paciente-list', component: PacienteListComponent, canActivate: [AuthGuard] },\n  { path: 'paciente-tabla', component: PacienteTablaComponent, canActivate: [AuthGuard] },\n  { path: 'forgot-password', component: ForgotPasswordComponent },\n  { path: 'verify-email-address', component: VerifyEmailComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'sistema-veterinaria';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AngularFireModule } from \"@angular/fire\";\nimport { AngularFireDatabaseModule } from '@angular/fire/database';\nimport { AngularFireAuthModule } from \"@angular/fire/auth\";\nimport { AngularFirestoreModule } from '@angular/fire/firestore';\nimport { environment } from '../environments/environment';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\nimport { SignInComponent } from './components/sign-in/sign-in.component';\nimport { SignUpComponent } from './components/sign-up/sign-up.component';\nimport { ForgotPasswordComponent } from './components/forgot-password/forgot-password.component';\nimport { VerifyEmailComponent } from './components/verify-email/verify-email.component';\nimport { PacientesComponent } from './components/pacientes/pacientes.component';\nimport { PacienteListComponent } from './components/pacientes/paciente-list/paciente-list.component';\nimport { PacienteComponent } from './components/pacientes/paciente/paciente.component';\n\n//Service\nimport { AuthService } from \"./services/auth.service\";\nimport { AuthGuard } from \"./guard/auth.guard\";\nimport { PacienteService } from './services/paciente.service';\n\n// Toastr, para notificaciones en angular\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ToastrModule } from 'ngx-toastr';\nimport { PacienteTablaComponent } from './components/pacientes/paciente-tabla/paciente-tabla.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    DashboardComponent,\n    SignInComponent,\n    SignUpComponent,\n    ForgotPasswordComponent,\n    VerifyEmailComponent,\n    PacientesComponent,\n    PacienteListComponent,\n    PacienteComponent,\n    PacienteTablaComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    AngularFireModule.initializeApp(environment.firebase),\n    AngularFireAuthModule,\n    AngularFireDatabaseModule,\n    ToastrModule.forRoot(),\n    AngularFirestoreModule\n  ],\n  providers: [AuthGuard, PacienteService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- menu navbar con un icono de bootstrap --> \n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/250px-Angular_full_color_logo.svg.png\" width=\"50md\" height=\"50md\" alt=\"logo\">\n<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n<span class=\"navbar-toggler-icon\"></span>\n</button>\n<div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n<div class=\"navbar-nav\">\n<a class=\"nav-item nav-link active\" routerLink=\"/dashboard\">Perfil<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/pacientes\">Pacientes<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/paciente-tabla\">Ticket<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" (click)=\"authService.SignOut()\">Salir<span class=\"sr-only\">(current)</span></a>\n</div>\n</div>\n</nav>\n\n<br>\n<div class=\"container\">\n<br>\n<div class=\"row\" *ngIf=\"authService.userData as user\">\n<div class=\" col-lg-offset-3 col-lg-6\">\n<div class=\"panel panel-default\">\n<div class=\"panel-body\">\n<div class=\"row\">\n<div class=\"col-lg-12\">\n<div class=\"row\">\n<div class=\"col-sm-offset-3 col-sm-6 col-md-offset-3 col-md-6 col-lg-offset-3 col-lg-6\">\n<img class=\"img-circle img-responsive\" src=\"{{(user.photoURL) ? user.photoURL : '/assets/dummy-user.png'}}\">\n</div>\n</div>\n</div>\n</div>\n<div class=\"row\">\n<div class=\"col-lg-12\">\n<div class=\"row\">\n<div class=\"centered-text col-sm-offset-3 col-sm-6 col-md-offset-3 col-md-6 col-lg-offset-3 col-lg-6\">\n<div itemscope=\"\" itemtype=\"http://schema.org/Person\">\n<h2> <span itemprop=\"name\">{{(user.displayName) ? user.displayName : 'User'}}</span></h2>\n<p itemprop=\"jobTitle\">Identificador: {{user.uid}}</p>\n<p><span itemprop=\"affiliation\">Email: {{user.email}}</span></p>\n<p>\n<i class=\"fa fa-map-marker\"></i> <span itemprop=\"addressRegion\">Verificado: {{user.emailVerified}}</span>\n</p>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<br>\n<br>\n\n<!-- Footer -->\n<footer class=\"page-footer font-small black\">\n<!-- Copyright -->\n<div class=\"footer-copyright text-center py-3\">Fernando Reyes © 2020 Copyright: Derechos reservados\n</div>\n<!-- Copyright -->\n</footer>\n<!-- Footer -->","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.css']\n})\nexport class ForgotPasswordComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-5\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h1 class=\"text-center\">RECUPERAR CLAVE</h1>\n          <form>\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"email\" class=\"form-control\" placeholder=\"Email Address\" #passwordResetEmail required>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  <div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-2\">\n      <div class=\"card\">\n        <div class=\"card-body d-flex justify-content-around\">\n          <input type=\"button\" class=\"btn btn-primary\" value=\"Recuperar clave\" (click)=\"authService.ForgotPassword(passwordResetEmail.value)\">\n          <input type=\"button\" class=\"btn btn-success\" value=\"Regresar al Login\" routerLink=\"/sign-in\">\n        </div>\n      </div>\n    </div>\n  </div>\n","import { Component, OnInit } from '@angular/core';\nimport {Paciente} from '../../../models/paciente';\n\n\n// service\nimport { PacienteService } from '../../../services/paciente.service';\n\n// toastr\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-paciente-list',\n  templateUrl: './paciente-list.component.html',\n  styleUrls: ['./paciente-list.component.css']\n})\nexport class PacienteListComponent implements OnInit {\n\n  // Arreglo para almacenar la informacion que se obtenga de la base de datos de firebase\n  pacienteList: Paciente[];\n\n  constructor(\n    private pacienteService: PacienteService,\n    private toastr: ToastrService\n  ) { }\n\n  ngOnInit() {\n    return this.pacienteService.getPacientes()\n      .snapshotChanges().subscribe(item => {\n        this.pacienteList = [];\n        item.forEach(element => {\n          let x = element.payload.toJSON();\n          x[\"$key\"] = element.key;\n          this.pacienteList.push(x as Paciente);\n        });\n      });\n  }\n /* \n   Recibe una varible de tipo 'Product' para invocar el servicio de firebase, para actualizarlo\n   Para no ocupar el doble enlace de datos ' [(ngModel)]' , se va utilizar 'Object.assign({}, product)'  \n  */\n onEdit(paciente: Paciente) {\n  this.pacienteService.selectedPaciente = Object.assign({}, paciente);\n}\n\n/* \n Recibe la llave '$key' para eliminar el registro, invocando el metodo 'deleteProduct' del servicio de firebase\n ademas muestra un 'warning' con toastr\n*/\nonDelete($key: string) {\n  if (confirm('Are you sure you want to delete it?')) {\n    this.pacienteService.deletePaciente($key);\n    this.toastr.warning('Deleted Successfully', 'Paciente Removed');\n  }\n}\n\n}\n","<div class=\"card\">\n<div class=\"card-body\">\n<h3 class=\"text-center\">\nListado de Pacientes\n</h3>\n<br>\n<table id=\"tabla\"class=\"table table-bordered table-responsive\">\n<thead class=\"thead-dark\">\n<tr>\n<th scope=\"col\">Identificador</th>\n<th scope=\"col\">Nombre</th>\n<th scope=\"col\">Numero de DUI</th>\n<th scope=\"col\">Mascota</th>\n<th scope=\"col\">Tratamiento</th>\n<th scope=\"col\">Medicamento</th>\n<th scope=\"col\">Visita</th>\n<th scope=\"col\">Costo</th>\n<th scope=\"col\">Operacion</th>\n</tr>\n</thead>\n<tbody>\n<tr *ngFor=\"let paciente of pacienteList\">\n<td>{{paciente.$key}}</td>\n<td>{{paciente.name}}</td>            \n<td>{{paciente.dui}}</td>\n<td>{{paciente.mascota}}</td>\n<td>{{paciente.tratamiento}}</td>\n<td>{{paciente.medicamento}}</td>\n<td>{{paciente.visita}}</td>\n<td>{{paciente.costo}}</td>\n<td>\n<button type=\"button\" class=\"btn btn-success\" (click)=\"onEdit(paciente)\">Editar</button>\n<br>\n<br>\n<button type=\"button\" class=\"btn btn-danger\" (click)=\"onDelete(paciente.$key)\">Borrar</button>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport jsPDF from 'jspdf';\nimport html2canvas from 'html2canvas';\n\n//Service\nimport { PacienteService } from '../../../services/paciente.service';\nimport {Paciente} from '../../../models/paciente';\n\n@Component({\n  selector: 'app-paciente-tabla',\n  templateUrl: './paciente-tabla.component.html',\n  styleUrls: ['./paciente-tabla.component.css']\n})\nexport class PacienteTablaComponent implements OnInit {\n\n  // Arreglo para almacenar la informacion que se obtenga de la base de datos de firebase\n  pacienteList: Paciente[];\n  filtro:string;\n\n  constructor(\n    private pacienteService: PacienteService) {this.downloadPDF();}\n     \n     public downloadPDF(): void {\n      var data = document.getElementById('htmlData');  //Id of the table\n      html2canvas(data).then(canvas => {  \n        // Few necessary setting options  \n        let imgWidth = 208;   \n        let pageHeight = 295;    \n        let imgHeight = canvas.height * imgWidth / canvas.width;  \n        let heightLeft = imgHeight;  \n  \n        const contentDataURL = canvas.toDataURL('image/png')  \n        let pdf = new jsPDF('p', 'mm', 'a4'); // A4 size page of PDF  \n        let position = 0;  \n        pdf.addImage(contentDataURL, 'PNG', 0, position, imgWidth, imgHeight)  \n        pdf.save('Factura.pdf'); // Generated PDF   \n      }); \n    }\n\n    ngOnInit() {\n      return this.pacienteService.getPacientes()\n        .snapshotChanges().subscribe(item => {\n          this.pacienteList = [];\n          item.forEach(element => {\n            let x = element.payload.toJSON();\n            x[\"$key\"] = element.key;\n            this.pacienteList.push(x as Paciente);\n          });\n        });\n    }\n\n    buscar(){\n      this.pacienteList = this.pacienteList.filter(res=>{\n        return res.name.toLocaleLowerCase().match(this.filtro.toLocaleLowerCase());\n      })\n    }\n\n}\n","<!-- menu navbar con un icono de bootstrap --> \n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/250px-Angular_full_color_logo.svg.png\" width=\"50md\" height=\"50md\" alt=\"logo\">\n<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n<span class=\"navbar-toggler-icon\"></span>\n</button>\n<div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n<div class=\"navbar-nav\">\n<a class=\"nav-item nav-link active\" routerLink=\"/dashboard\">Perfil<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/pacientes\">Pacientes<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/paciente-tabla\">Ticket<span class=\"sr-only\">(current)</span></a>\n</div>\n</div>\n</nav>\n\n<br>\n<div class=\"container\">\n<h3 class=\"text-center\">Selecciona a un paciente para generar Ticket</h3>\n<div class=\"abs-center\">\n<!-- Search form -->\n<div class=\"active-pink-4 mb-4\">\n<input class=\"form-control\" type=\"text\" [(ngModel)]=\"filtro\" (input)=\"buscar()\" placeholder=\"Buscar por nombre\" aria-label=\"Search\">\n</div>\n</div>\n</div>\n\n<div class=\"container\">\n<div class=\"abs-center\">\n<div id=\"htmlData\">\n<table id=\"tabla\"class=\"table table-bordered table-responsive\">\n<thead class=\"thead-dark\">\n<tr>\n<th scope=\"col\">Identificador</th>\n<th scope=\"col\">Nombre</th>\n<th scope=\"col\">Numero de DUI</th>\n<th scope=\"col\">Mascota</th>\n<th scope=\"col\">Tratamiento</th>\n<th scope=\"col\">Medicamento</th>\n<th scope=\"col\">Visita</th>\n<th scope=\"col\">Costo</th>\n</tr>\n</thead>\n<tbody>\n<tr *ngFor=\"let paciente of pacienteList\">\n<td>{{paciente.$key}}</td>\n<td>{{paciente.name}}</td>            \n<td>{{paciente.dui}}</td>\n<td>{{paciente.mascota}}</td>\n<td>{{paciente.tratamiento}}</td>\n<td>{{paciente.medicamento}}</td>\n<td>{{paciente.visita}}</td>\n<td>{{paciente.costo}}</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n\n<div class=\"card\">\n<div class=\"card-body\">\n<div class=\"row d-flex justify-content-center\">\n<button class=\"btn col col-lg-4 btn-danger btn-block ml-4\" (click)=\"downloadPDF()\">Generar Ticket</button>\n</div>\n</div>\n</div>\n<br>\n<br>\n\n<!-- Footer -->\n<footer class=\"page-footer font-small black\">\n<!-- Copyright -->\n<div class=\"footer-copyright text-center py-3\">Fernando Reyes © 2020 Copyright: Derechos reservados\n</div>\n<!-- Copyright -->\n</footer>\n<!-- Footer -->\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm } from '@angular/forms';\n\n//  Service \nimport { PacienteService } from '../../../services/paciente.service';\n// Class\nimport { Paciente } from '../../../models/paciente';\n// toastr\nimport { ToastrService } from 'ngx-toastr';\n\n@Component({\n  selector: 'app-paciente',\n  templateUrl: './paciente.component.html',\n  styleUrls: ['./paciente.component.css']\n})\nexport class PacienteComponent implements OnInit {\n\n  constructor(\n    public pacienteService: PacienteService,\n    public toastr: ToastrService\n  ) { }\n\n  ngOnInit(): void {\n    this.pacienteService.getPacientes();\n    this.resetForm();\n  }\n\n  // Recibe un formulario del tipo NgForm, lo envia a guardar o actualizar , invocando el servicio Firebase\n  // lo termina limpiando resetForm\n  onSubmit(pacienteForm: NgForm) {\n    if (pacienteForm.value.$key == null)\n      this.pacienteService.insertPaciente(pacienteForm.value);\n    else\n      this.pacienteService.updatePaciente(pacienteForm.value);\n\n    this.resetForm(pacienteForm);\n    this.toastr.success('Sucessful Operation', 'Paciente Registered');\n  }\n\n  // Para limpiar el formulario\n  resetForm(pacienteForm?: NgForm) {\n    if (pacienteForm != null)\n      pacienteForm.reset();\n    this.pacienteService.selectedPaciente = new Paciente();\n  }\n\n}\n","<div class=\"card mt-5\">\n<div class=\"card-body\">\n<h3 class=\"text-center\">\nRegistro de Pacientes\n</h3>\n<br>\n<!-- Cuando el evento onSubmit , suceda se va pasar todo el formulario 'pacienteForm' -->\n<form id=\"formulario\" #pacienteForm=\"ngForm\" (ngSubmit)=\"onSubmit(pacienteForm)\">\n\n<!-- TO UPDATE -->\n<input type=\"hidden\" name=\"$key\" #$key=\"ngModel\" [(ngModel)]=\"pacienteService.selectedPaciente.$key\">\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Nombre</label>\n<input type=\"text\" class=\"form-control\" name=\"name\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.name\" placeholder=\"Agregar Nombre\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Numero de DUI</label>\n<input type=\"text\" class=\"form-control\" name=\"dui\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.dui\" placeholder=\"Agregar DUI\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Nombre de la mascota</label>\n<input type=\"text\" class=\"form-control\" name=\"mascota\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.mascota\" placeholder=\"Agregar Mascota\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Tratamiento aplicable</label>\n<input type=\"text\" class=\"form-control\" name=\"tratamiento\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.tratamiento\" placeholder=\"Agregar Tratamiento\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Medicamento recetado</label>\n<input type=\"text\" class=\"form-control\" name=\"medicamento\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.medicamento\" placeholder=\"Agregar Medicamento\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Numero de visita</label>\n<input type=\"text\" class=\"form-control\" name=\"visita\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.visita\" placeholder=\"Agregar Visita\">\n</div>\n\n<div class=\"form-group\">\n<label for=\"exampleFormControlInput1\">Costo total</label>\n<input type=\"text\" class=\"form-control\" name=\"costo\" #name=\"ngModel\"\n[(ngModel)]=\"pacienteService.selectedPaciente.costo\" placeholder=\"Agregar Costo\">\n</div>\n\n<div class=\"form-group\">\n<button class=\"btn btn-primary\" type=\"submit\">Agregar</button>\n<br>\n<br>\n<button class=\"btn btn-warning\" type=\"reset\" (click)=\"resetForm(pacienteForm)\">Limpiar</button>\n</div>\n</form>\n</div>\n</div>","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-pacientes',\n  templateUrl: './pacientes.component.html',\n  styleUrls: ['./pacientes.component.css']\n})\nexport class PacientesComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- menu navbar con un icono de bootstrap --> \n<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n<img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/c/cf/Angular_full_color_logo.svg/250px-Angular_full_color_logo.svg.png\" width=\"50md\" height=\"50md\" alt=\"logo\">\n<button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n<span class=\"navbar-toggler-icon\"></span>\n</button>\n<div class=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n<div class=\"navbar-nav\">\n<a class=\"nav-item nav-link active\" routerLink=\"/dashboard\">Perfil<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/pacientes\">Pacientes<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" routerLink=\"/paciente-tabla\">Ticket<span class=\"sr-only\">(current)</span></a>\n<a class=\"nav-item nav-link active\" (click)=\"authService.SignOut()\">Salir<span class=\"sr-only\">(current)</span></a>\n</div>\n</div>\n</nav>\n\n<div class=\"container\">\n<div class=\"row\">\n<div class=\"col-md-5\">\n<app-paciente></app-paciente>\n</div>\n<div class=\"col-md-7 text-center\">\n<br>\n<br>\n<app-paciente-list></app-paciente-list>\n</div>\n</div>\n</div>\n<br>\n<br>\n\n\n<!-- Footer -->\n<footer class=\"page-footer font-small black\">\n<!-- Copyright -->\n<div class=\"footer-copyright text-center py-3\">Fernando Reyes © 2020 Copyright: Derechos reservados\n</div>\n<!-- Copyright -->\n</footer>\n<!-- Footer -->\n","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-sign-in',\n  templateUrl: './sign-in.component.html',\n  styleUrls: ['./sign-in.component.css']\n})\nexport class SignInComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-5\">\n      <div class=\"card\">\n        <div class=\"card-body\">\n          <h1 class=\"text-center\">Iniciar sesión</h1>\n          <form>\n            <div class=\"form-group\">\n              <label for=\"email\">Email</label>\n              <input type=\"text\" class=\"form-control\" placeholder=\"Username\" #userName required>\n            </div>\n            <div class=\"form-group\">\n              <label for=\"password\">Contraseña</label>\n              <input type=\"password\" class=\"form-control\" placeholder=\"Password\" #userPassword required>\n            </div>\n            <input type=\"button\" class=\"btn btn-dark btn-lg float-left\" value=\"Login\" (click)=\"authService.SignIn(userName.value, userPassword.value)\">\n            <br>\n            <input type=\"button\" class=\"btn btn-light btn-lg float-left\" value=\"Olvidaste tu clave?\" routerLink=\"/forgot-password\">\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n  \n  \n  \n  <div class=\"row\">\n    <div class=\"col-md-6 mx-auto mt-2\">\n      <div class=\"card\">\n        <div class=\"card-body d-flex justify-content-around\">\n          <button class=\"btn btn-lg btn-google\" (click)=\"authService.GoogleAuth()\" ><i class=\"fa fa-google-plus\" aria-hidden=\"true\"></i> Google</button>\n        </div>\n      </div>\n    </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n  \n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Sign Up</h3>\n  \n        <div class=\"formGroup\">\n          <input type=\"email\" class=\"formControl\" placeholder=\"Email Address\" #userEmail required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"password\" class=\"formControl\" placeholder=\"Password\" #userPwd required>\n        </div>\n  \n        <div class=\"formGroup\">\n          <input type=\"button\" class=\"btn btnPrimary\" value=\"Sign Up\" (click)=\"authService.SignUp(userEmail.value, userPwd.value)\">\n        </div>\n  \n        <div class=\"formGroup\">\n          <span class=\"or\"><span class=\"orInner\">Or</span></span>\n        </div>\n  \n        <!-- Continue with Google -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn googleBtn\" (click)=\"authService.GoogleAuth()\">\n            <i class=\"fab fa-google-plus-g\"></i>\n            Continue with Google\n          </button>\n        </div>\n  \n        <!-- Continue with Facebook -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn facebookBtn\" (click)=\"authService.FacebookAuth()\">\n            <i class=\"fab fa-facebook\"></i>\n            Continue with Facebook\n          </button>\n        </div>\n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Already have an account? <span class=\"redirect\" routerLink=\"/sign-in\">Log In</span></span>\n      </div>\n    </div>\n  \n  </div>\n","import { Component, OnInit } from '@angular/core';\n\n//Service\nimport { AuthService } from \"../../services/auth.service\";\n\n@Component({\n  selector: 'app-verify-email',\n  templateUrl: './verify-email.component.html',\n  styleUrls: ['./verify-email.component.css']\n})\nexport class VerifyEmailComponent implements OnInit {\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"displayTable\">\n    <div class=\"displayTableCell\">\n  \n      <div class=\"authBlock\">\n        <h3>Thank You for Registering</h3>\n  \n        <div class=\"formGroup\" *ngIf=\"authService.userData as user\">\n          <p class=\"text-center\">We have sent a confirmation email to <strong>{{user.email}}</strong>.</p>\n          <p class=\"text-center\">Please check your email and click on the link to verfiy your email address.</p>\n        </div>\n        \n        <!-- Calling SendVerificationMail() method using authService Api -->\n        <div class=\"formGroup\">\n          <button type=\"button\" class=\"btn btnPrimary\" (click)=\"authService.SendVerificationMail()\">\n            <i class=\"fas fa-redo-alt\"></i>\n            Resend Verification Email\n          </button>\n        </div>\n  \n      </div>\n  \n      <div class=\"redirectToLogin\">\n        <span>Go back to?<span class=\"redirect\" routerLink=\"/sign-in\"> Sign in</span></span>\n      </div>\n  \n    </div>\n  </div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from \"../services/auth.service\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  constructor(\n    public authService: AuthService,\n    public router: Router\n  ){ }\n\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if(this.authService.isLoggedIn !== true) {\n      this.router.navigate(['sign-in'])\n    }\n    return true;\n  }\n  \n}\n","export class Paciente {\n    $key : string;\n    name : string;\n    dui : string;\n    mascota : string;\n    tratamiento : string;\n    medicamento : string;\n    visita : string;\n    costo : string;\n}\n","import { Injectable, NgZone } from '@angular/core';\nimport { User } from \"../models/user\";\nimport { auth } from 'firebase/app';\nimport { AngularFireAuth } from \"@angular/fire/auth\";\nimport { AngularFirestore, AngularFirestoreDocument } from '@angular/fire/firestore';\nimport { Router } from \"@angular/router\";\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class AuthService {\n  userData: any; // Guardar datos de usuario registrados\n\n  constructor(\n    public afs: AngularFirestore,   //  Inyectar Servicio Firestore\n    public afAuth: AngularFireAuth, // Inyectar el servicio de autenticación de Firebase\n    public router: Router,  \n    public ngZone: NgZone // Servicio NgZone para eliminar la advertencia de alcance externo\n  ) {    \n\n    /* Guardar datos de usuario en almacenamiento local cuando\n    iniciado sesión y configurando nulo al cerrar sesión*/\n    this.afAuth.authState.subscribe(user => {\n      if (user) {\n        this.userData = user;\n        localStorage.setItem('user', JSON.stringify(this.userData));\n        JSON.parse(localStorage.getItem('user'));\n      } else {\n        localStorage.setItem('user', null);\n        JSON.parse(localStorage.getItem('user'));\n      }\n    })\n  }\n\n  // Iniciar sesión con correo electrónico / contraseña\n  SignIn(email, password) {\n    return this.afAuth.signInWithEmailAndPassword(email, password).then((result) => {\n        this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        });\n        this.SetUserData(result.user);\n      }).catch((error) => {\n       // window.alert(\"Por favor revisar credenciales\")\n         window.alert(error.message)\n      })\n  }\n\n  // Regístrese con correo electrónico / contraseña\n  SignUp(email, password) {\n    return this.afAuth.createUserWithEmailAndPassword(email, password)\n      .then((result) => {\n        /* Llame a la función SendVerificaitonMail () cuando un nuevo usuario firme\n        y vuelve la funcion*/\n        this.SendVerificationMail();\n        this.SetUserData(result.user);\n      }).catch((error) => {\n        window.alert(error.message)\n      })\n  }\n\n  // Enviar verificación por correo electrónico cuando se registre un nuevo usuario\n  SendVerificationMail() {\n    return this.afAuth.currentUser.then(u => u.sendEmailVerification())\n    .then(() => {\n    this.router.navigate(['verify-email-address']);\n    })\n    }\n\n  // Restablecer contraseña olvidada\n  ForgotPassword(passwordResetEmail) {\n    return this.afAuth.sendPasswordResetEmail(passwordResetEmail)\n    .then(() => {\n      window.alert('Password reset email sent, check your inbox.');\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n  // Devuelve verdadero cuando el usuario está conectado y \n  // el correo electrónico está verificado\n  get isLoggedIn(): boolean {\n    const user = JSON.parse(localStorage.getItem('user'));\n    return (user !== null && user.emailVerified !== false) ? true : true;\n  }\n\n// Iniciar sesión usando Facebook\n  FacebookAuth() {\n    return this.AuthLogin(new auth.FacebookAuthProvider());\n  }\n\n  // Iniciar sesión usando Twitter\n  TwitterAuth() {\n    return this.AuthLogin(new auth.TwitterAuthProvider());\n  }\n\n  // Iniciar sesión usando Facebook Google\n  GoogleAuth() {\n    return this.AuthLogin(new auth.GoogleAuthProvider());\n  }\n\n  // Lógica de autenticación para ejecutar cualquier proveedor de autenticación  \n  AuthLogin(provider) {\n    return this.afAuth.signInWithPopup(provider)\n    .then((result) => {\n       this.ngZone.run(() => {\n          this.router.navigate(['dashboard']);\n        })\n      this.SetUserData(result.user);\n    }).catch((error) => {\n      window.alert(error)\n    })\n  }\n\n\n  /* Configurar datos de usuario al iniciar sesión con nombre de usuario / contraseña,\n  registrarse con nombre de usuario / contraseña e iniciar sesión con autenticación social\n  proveedor en la base de datos de Firestore usando el servicio AngularFirestore + AngularFirestoreDocument*/\n  SetUserData(user) {\n    const userRef: AngularFirestoreDocument<any> = this.afs.doc(`users/${user.uid}`);\n    const userData: User = {\n      uid: user.uid,\n      email: user.email,\n      displayName: user.displayName,\n      photoURL: user.photoURL,\n      emailVerified: user.emailVerified\n    }\n    return userRef.set(userData, {\n      merge: true\n    })\n  }\n\n  // desconectar\n  SignOut() {\n    return this.afAuth.signOut().then(() => {\n      localStorage.setItem('user', null);\n      localStorage.removeItem('user');\n      this.router.navigate(['sign-in']);\n    })\n  }\n\n  FacebookLogin(){\n    var provider = new auth.FacebookAuthProvider();\n    auth().signInWithPopup(provider).then(function(result) {\n      var user = result.user;\n      console.log(user);\n      // ...\n    }).catch(function(error) {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n      // ...\n    });\n    \n  }\n  \n\n\n\n}\n","import { Injectable } from '@angular/core';\n\n// Firebase\nimport { AngularFireDatabase, AngularFireList } from '@angular/fire/database';\n\n// Model\nimport { Paciente } from '../models/paciente';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PacienteService {\n\n  // Traer los datos de firebase\n  pacienteList: AngularFireList<any>;\n\n  // Una variable temporal, para guardar los datos seleccionados, del tipo Paciente\n  selectedPaciente: Paciente = new Paciente();\n\n  constructor(private firebase: AngularFireDatabase) { }\n  // Traer todos los pacientes desde firebase \n  getPacientes() { // guarda los elementos en la varible 'pacientes'\n  return this.pacienteList = this.firebase.list('pacientes');\n}\n\n// crear un nuevo producto  , recibiendo un parametro de tipo Paciente\ninsertPaciente(paciente: Paciente) {\n  // agregar un dato al final de la lista, como recibe un objeto del tipo Paciente , puede acceder a sus propiedades\n  this.pacienteList.push({\n    name: paciente.name,\n    dui: paciente.dui,\n    mascota: paciente.mascota,\n    tratamiento: paciente.tratamiento,\n    medicamento: paciente.medicamento,\n    visita: paciente.visita,\n    costo: paciente.costo\n  });\n}\n\n// Actualiza un producto, recibiendo un parametro de tipo Paciente\nupdatePaciente(paciente: Paciente) {\n  // Utilizando el metodo update de firebase , se envia clave y los parametros que va actualizar \n  this.pacienteList.update(paciente.$key, {\n    name: paciente.name,\n    dui: paciente.dui,\n    mascota: paciente.mascota,\n    tratamiento: paciente.tratamiento,\n    medicamento: paciente.medicamento,\n    visita: paciente.visita,\n    costo: paciente.costo\n  });\n}\n\n// Elimina un producto, recibiendo como parametro la clave , utilizando el metodo remove de firebase\ndeletePaciente($key: string) {\n  this.pacienteList.remove($key);\n}\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  firebase: {\n  apiKey: \"AIzaSyDRzLj0wxkVDR3a4RsAzcHdsS4-dLYoX2o\",\n  authDomain: \"sistema-veterinaria.firebaseapp.com\",\n  databaseURL: \"https://sistema-veterinaria.firebaseio.com\",\n  projectId: \"sistema-veterinaria\",\n  storageBucket: \"sistema-veterinaria.appspot.com\",\n  messagingSenderId: \"109153873378\",\n  appId: \"1:109153873378:web:2d5a3b333756b24423ddbb\",\n  measurementId: \"G-5128KXDR69\"\n  }\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}